# Cargo.toml: <https://doc.rust-lang.org/cargo/reference/manifest.html>

[package]
name = "linux-libc-auxv"
description = """
Linux passes an initial stack layout to applications, that contains `argc`, `argv`, `envp`, and the
`auxiliary vector` right above the stack pointer. The libc of a Linux program parses this structure
in its `_start`-symbol ("crt0") and passes the right pointers as arguments to `main` afterward. This
crate helps to construct and parse this data structure in `no_std` environments and for different
address spaces.
"""
version = "0.2.1"
edition = "2024"
rust-version = "1.85.0"
authors = [
    "Philipp Schuster <phip1611@gmail.com>"
]
keywords = ["libc", "auxv", "linux", "auxiliary-vector", "crt0"]
categories = ["os::linux-apis", "no-std"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/phip1611/linux-libc-auxv"
repository = "https://github.com/phip1611/linux-libc-auxv"
documentation = "https://docs.rs/linux-libc-auxv"
exclude = [
    ".github"
]

[dependencies]
enum-iterator = "0.7"
bitflags = "1.3"
